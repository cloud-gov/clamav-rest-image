---

# clamav-rest-image

jobs:

- name: reconfigure
  serial: true
  plan:
  - get: pipeline-source
    params: {depth: 1}
    trigger: true
  - set_pipeline: self
    file: pipeline-source/ci/pipeline.yml

- name: dependency-pr
  plan:
  - in_parallel:
    - get: clamav-rest-release
      trigger: true
    - get: golang-release
      trigger: true
    - get: source
  - task: update-versions
    image: general-task
    file: source/ci/deploy.yml    
  - put: source-pull-request
    params:
      path: source-pull-request
      description: "Updates the clamav-rest and/or golang versions."

- name: test
  serial: true
  plan:
  - in_parallel:
    - get: clamav-rest-candidate-image
      params: {skip_download: true}
      trigger: true
    - get: general-task
    - get: source
      params: {depth: 1}
      trigger: true
  - task: deploy
    image: general-task
    file: source/ci/deploy.yml
    params:
      CF_API: ((dev-cf-api-url))
      CF_DOCKER_PASSWORD: ((ecr_aws_secret))
      CF_DOCKER_USERNAME: ((ecr_aws_key))
      CF_ORG: cloud-gov
      CF_PASSWORD: ((dev-cf-password))
      CF_SPACE: acceptance-tests
      CF_USERNAME: ((dev-cf-username))
      CLAMAV_REST_DOMAIN: apps.internal
      CLAMAV_REST_HOSTNAME: clamav-rest-acceptance
  - task: test
    image: general-task
    file: source/ci/test.yml
    params:
      CF_API: ((dev-cf-api-url))
      CF_ORG: cloud-gov
      CF_PASSWORD: ((dev-cf-password))
      CF_SPACE: acceptance-tests
      CF_USERNAME: ((dev-cf-username))
      CLAMAV_REST_DOMAIN: apps.internal
      CLAMAV_REST_HOSTNAME: clamav-rest-acceptance
  - task: cleanup
    image: general-task
    file: source/ci/cleanup.yml
    params:
      CF_API: ((dev-cf-api-url))
      CF_ORG: cloud-gov
      CF_PASSWORD: ((dev-cf-password))
      CF_SPACE: acceptance-tests
      CF_USERNAME: ((dev-cf-username))
      CLAMAV_REST_HOSTNAME: clamav-rest-acceptance

- name: publish
  serial: true
  plan:  
  - in_parallel:
    - get: source
      params: {depth: 1}
      passed: [test]
      trigger: true
    - get: clamav-rest-candidate-image
      params: {format: oci}
      passed: [test]
      trigger: true
  - load_var: image_tag
    file: clamav-rest-candidate-image/tag
    format: trim
  - put: clamav-rest-image
    params:
      image: clamav-rest-candidate-image/image.tar
      additional_tags: source/.git/short_ref

resources:

- name: clamav-rest-candidate-image
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: clamav-rest-candidate
    aws_region: us-gov-west-1
    tag_regex: ".*"
    created_at_sort: true

- name: clamav-rest-image
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: clamav-rest
    aws_region: us-gov-west-1
    tag: latest
    tag_regex: ".*"
    created_at_sort: true

- name: clamav-rest-release
  type: github-release
  check_every: 1h
  source:
    access_token: ((cg-ci-bot-ghtoken))
    owner: ajilach
    repository: clamav-rest
    tag_filter: ".*"

- name: general-task
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: general-task
    aws_region: us-gov-west-1
    tag: latest

- name: golang-source
  type: git
  check_every: 1h
  source:
    tag_filter: "v?([^v].*)"
    uri: https://github.com/golang/go.git
  
- name: pipeline-source
  type: git
  icon: github-circle
  source:
    branch: develop
    commit_verification_keys: ((cloud-gov-pgp-keys))
    paths: [ci/pipeline.yml]
    uri: https://github.com/cloud-gov/clamav-rest-image.git

- name: source
  type: git
  icon: github-circle
  check_every: 10s
  source:
    branch: develop
    commit_verification_keys: ((cloud-gov-pgp-keys))
    ignore_paths: [ci/*]
    uri: https://github.com/cloud-gov/clamav-rest-image.git

- name: source-pull-request
  type: pull-request
  check_every: 1m
  source:
    repository: cloud-gov/clamav-rest-image
    access_token: ((cg-ci-bot-ghtoken))
    base_branch: develop

resource_types:

- name: git
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: git-resource
    aws_region: us-gov-west-1
    tag: latest

- name: pull-request
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: github-pr-resource
    aws_region: us-gov-west-1
    tag: latest

- name: registry-image
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: registry-image-resource
    aws_region: us-gov-west-1
    tag: latest